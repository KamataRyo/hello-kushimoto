<?php

require_once 'mock/class-speaker-mock.php';

class Dummy_Speaker_Mock {
	public function whoami() {
		// TODO: Implement whoami() method.
		return 'mock';
	}

	public function say() {
		// TODO: Implement say() method.
		return "I'm Dummy Speaker.";
	}
}

class Test_Hello_Kushimoto_Admin_Panel extends WP_UnitTestCase {

	/** @var Hello_Kushimoto_Option_Manager */
	private $option_manager;
	/** @var  Hello_Kushimoto_Speaker_Seeker */
	private $speaker_seeker;
	/** @var  Hello_Kushimoto_Admin_Panel */
	private $admin_panel;

	public function setUp() {
		parent::setUp(); // TODO: Change the autogenerated stub
		$this->option_manager = new Hello_Kushimoto_Option_Manager();
		$this->speaker_seeker = new Hello_Kushimoto_Speaker_Seeker();
		$this->admin_panel    = new Hello_Kushimoto_Admin_Panel( $this->option_manager, $this->speaker_seeker );
	}

	public function test_create_speaker_return_speaker() {

		$speaker_mock = $this->admin_panel->create_speaker( 'Speaker_Mock' );
		$this->assertTrue( $speaker_mock instanceof Speaker_Mock );

		$speaker_mock = $this->admin_panel->create_speaker( 'Dummy_Speaker_Mock' );
		$this->assertNull( $speaker_mock );
	}

	public function test_get_speakers() {
		$speakers = $this->admin_panel->get_speakers();
		$this->assertNotEmpty( $speakers );
		$files = glob( HELLO_KUSHIMOTO_DIR . '/src/speaker/concrete/*.php' );
		$this->assertEquals( count( $files ), count( $speakers ) );

	}
}
